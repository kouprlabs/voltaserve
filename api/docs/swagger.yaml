basePath: /v3
definitions:
  conversion_client.PipelineRunOptions:
    properties:
      bucket:
        type: string
      key:
        type: string
      payload:
        additionalProperties:
          type: string
        type: object
      pipelineId:
        type: string
      snapshotId:
        type: string
      taskId:
        type: string
    type: object
  errorpkg.ErrorResponse:
    properties:
      code:
        type: string
      message:
        type: string
      moreInfo:
        type: string
      status:
        type: integer
      userMessage:
        type: string
    type: object
  language_client.InsightsEntity:
    properties:
      frequency:
        type: integer
      label:
        type: string
      text:
        type: string
    type: object
  model.DocumentProps:
    properties:
      pages:
        $ref: '#/definitions/model.PagesProps'
      thumbnails:
        $ref: '#/definitions/model.ThumbnailsProps'
    type: object
  model.ImageProps:
    properties:
      height:
        type: integer
      width:
        type: integer
      zoomLevels:
        items:
          $ref: '#/definitions/model.ZoomLevel'
        type: array
    type: object
  model.PagesProps:
    properties:
      count:
        type: integer
      extension:
        type: string
    type: object
  model.S3Object:
    properties:
      bucket:
        type: string
      document:
        $ref: '#/definitions/model.DocumentProps'
      image:
        $ref: '#/definitions/model.ImageProps'
      key:
        type: string
      size:
        type: integer
    type: object
  model.ThumbnailsProps:
    properties:
      extension:
        type: string
    type: object
  model.Tile:
    properties:
      height:
        type: integer
      lastColWidth:
        type: integer
      lastRowHeight:
        type: integer
      width:
        type: integer
    type: object
  model.ZoomLevel:
    properties:
      cols:
        type: integer
      height:
        type: integer
      index:
        type: integer
      rows:
        type: integer
      scaleDownPercentage:
        type: number
      tile:
        $ref: '#/definitions/model.Tile'
      width:
        type: integer
    type: object
  mosaic_client.MosaicMetadata:
    properties:
      extension:
        type: string
      height:
        type: integer
      width:
        type: integer
      zoomLevels:
        items:
          $ref: '#/definitions/mosaic_client.MosaicZoomLevel'
        type: array
    type: object
  mosaic_client.MosaicTile:
    properties:
      height:
        type: integer
      lastColWidth:
        type: integer
      lastRowHeight:
        type: integer
      width:
        type: integer
    type: object
  mosaic_client.MosaicZoomLevel:
    properties:
      cols:
        type: integer
      height:
        type: integer
      index:
        type: integer
      rows:
        type: integer
      scaleDownPercentage:
        type: number
      tile:
        $ref: '#/definitions/mosaic_client.MosaicTile'
      width:
        type: integer
    type: object
  router.FileGrantGroupPermissionOptions:
    properties:
      groupId:
        type: string
      ids:
        items:
          type: string
        type: array
      permission:
        enum:
        - viewer
        - editor
        - owner
        type: string
    required:
    - groupId
    - ids
    - permission
    type: object
  router.FileGrantUserPermissionOptions:
    properties:
      ids:
        items:
          type: string
        type: array
      permission:
        enum:
        - viewer
        - editor
        - owner
        type: string
      userId:
        type: string
    required:
    - ids
    - permission
    - userId
    type: object
  router.FilePatchNameOptions:
    properties:
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  router.FileRevokeGroupPermissionOptions:
    properties:
      groupId:
        type: string
      ids:
        items:
          type: string
        type: array
    required:
    - groupId
    - ids
    type: object
  router.FileRevokeUserPermissionOptions:
    properties:
      ids:
        items:
          type: string
        type: array
      userId:
        type: string
    required:
    - ids
    - userId
    type: object
  router.GroupPatchNameOptions:
    properties:
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  router.GroupRemoveMemberOptions:
    properties:
      userId:
        type: string
    required:
    - userId
    type: object
  router.OrganizationPatchNameOptions:
    properties:
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  router.OrganizationRemoveMemberOptions:
    properties:
      userId:
        type: string
    required:
    - userId
    type: object
  router.WorkspacePatchNameOptions:
    properties:
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  router.WorkspacePatchStorageCapacityOptions:
    properties:
      storageCapacity:
        minimum: 1
        type: integer
    required:
    - storageCapacity
    type: object
  service.Download:
    properties:
      document:
        $ref: '#/definitions/model.DocumentProps'
      extension:
        type: string
      image:
        $ref: '#/definitions/model.ImageProps'
      size:
        type: integer
    type: object
  service.File:
    properties:
      createTime:
        type: string
      id:
        type: string
      isShared:
        type: boolean
      name:
        type: string
      parentId:
        type: string
      permission:
        type: string
      snapshot:
        $ref: '#/definitions/service.Snapshot'
      type:
        type: string
      updateTime:
        type: string
      workspaceId:
        type: string
    type: object
  service.FileCopyManyOptions:
    properties:
      sourceIds:
        items:
          type: string
        type: array
      targetId:
        type: string
    required:
    - sourceIds
    - targetId
    type: object
  service.FileCopyManyResult:
    properties:
      failed:
        items:
          type: string
        type: array
      new:
        items:
          type: string
        type: array
      succeeded:
        items:
          type: string
        type: array
    type: object
  service.FileDeleteManyOptions:
    properties:
      ids:
        items:
          type: string
        type: array
    required:
    - ids
    type: object
  service.FileDeleteManyResult:
    properties:
      failed:
        items:
          type: string
        type: array
      succeeded:
        items:
          type: string
        type: array
    type: object
  service.FileList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.File'
        type: array
      page:
        type: integer
      query:
        $ref: '#/definitions/service.FileQuery'
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.FileMoveManyOptions:
    properties:
      sourceIds:
        items:
          type: string
        type: array
      targetId:
        type: string
    required:
    - sourceIds
    - targetId
    type: object
  service.FileMoveManyResult:
    properties:
      failed:
        items:
          type: string
        type: array
      succeeded:
        items:
          type: string
        type: array
    type: object
  service.FileQuery:
    properties:
      createTimeAfter:
        type: integer
      createTimeBefore:
        type: integer
      text:
        type: string
      type:
        enum:
        - file
        - folder
        type: string
      updateTimeAfter:
        type: integer
      updateTimeBefore:
        type: integer
    required:
    - text
    type: object
  service.Group:
    properties:
      createTime:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      organization:
        $ref: '#/definitions/service.Organization'
      permission:
        type: string
      updateTime:
        type: string
    type: object
  service.GroupCreateOptions:
    properties:
      image:
        type: string
      name:
        maxLength: 255
        type: string
      organizationId:
        type: string
    required:
    - name
    - organizationId
    type: object
  service.GroupList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Group'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.GroupPermission:
    properties:
      group:
        $ref: '#/definitions/service.Group'
      id:
        type: string
      permission:
        type: string
    type: object
  service.GroupProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.InsightsCreateOptions:
    properties:
      languageId:
        type: string
    required:
    - languageId
    type: object
  service.InsightsEntityList:
    properties:
      data:
        items:
          $ref: '#/definitions/language_client.InsightsEntity'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.InsightsEntityProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.InsightsInfo:
    properties:
      isAvailable:
        type: boolean
      isOutdated:
        type: boolean
      snapshot:
        $ref: '#/definitions/service.Snapshot'
    type: object
  service.InsightsLanguage:
    properties:
      id:
        type: string
      iso6393:
        type: string
      name:
        type: string
    type: object
  service.Invitation:
    properties:
      createTime:
        type: string
      email:
        type: string
      id:
        type: string
      organization:
        $ref: '#/definitions/service.Organization'
      owner:
        $ref: '#/definitions/service.User'
      status:
        type: string
      updateTime:
        type: string
    type: object
  service.InvitationCreateOptions:
    properties:
      emails:
        items:
          type: string
        type: array
      organizationId:
        type: string
    required:
    - emails
    - organizationId
    type: object
  service.InvitationList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Invitation'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.InvitationProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.MosaicInfo:
    properties:
      isAvailable:
        type: boolean
      isOutdated:
        type: boolean
      metadata:
        $ref: '#/definitions/mosaic_client.MosaicMetadata'
      snapshot:
        $ref: '#/definitions/service.Snapshot'
    type: object
  service.Organization:
    properties:
      createTime:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      permission:
        type: string
      updateTime:
        type: string
    type: object
  service.OrganizationCreateOptions:
    properties:
      image:
        type: string
      name:
        maxLength: 255
        type: string
    required:
    - name
    type: object
  service.OrganizationList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Organization'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.OrganizationProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.Picture:
    properties:
      extension:
        type: string
    type: object
  service.ReprocessResponse:
    properties:
      accepted:
        items:
          type: string
        type: array
      rejected:
        items:
          type: string
        type: array
    type: object
  service.Snapshot:
    properties:
      createTime:
        type: string
      entities:
        $ref: '#/definitions/service.Download'
      id:
        type: string
      isActive:
        type: boolean
      language:
        type: string
      mosaic:
        $ref: '#/definitions/service.Download'
      ocr:
        $ref: '#/definitions/service.Download'
      original:
        $ref: '#/definitions/service.Download'
      preview:
        $ref: '#/definitions/service.Download'
      status:
        type: string
      task:
        $ref: '#/definitions/service.SnapshotTaskInfo'
      text:
        $ref: '#/definitions/service.Download'
      thumbnail:
        $ref: '#/definitions/service.Download'
      updateTime:
        type: string
      version:
        type: integer
    type: object
  service.SnapshotList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Snapshot'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.SnapshotPatchOptions:
    properties:
      entities:
        $ref: '#/definitions/model.S3Object'
      fields:
        items:
          type: string
        type: array
      mosaic:
        $ref: '#/definitions/model.S3Object'
      ocr:
        $ref: '#/definitions/model.S3Object'
      options:
        $ref: '#/definitions/conversion_client.PipelineRunOptions'
      original:
        $ref: '#/definitions/model.S3Object'
      preview:
        $ref: '#/definitions/model.S3Object'
      status:
        type: string
      taskId:
        type: string
      text:
        $ref: '#/definitions/model.S3Object'
      thumbnail:
        $ref: '#/definitions/model.S3Object'
    type: object
  service.SnapshotProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.SnapshotTaskInfo:
    properties:
      id:
        type: string
      isPending:
        type: boolean
    type: object
  service.StorageUsage:
    properties:
      bytes:
        type: integer
      maxBytes:
        type: integer
      percentage:
        type: integer
    type: object
  service.Task:
    properties:
      createTime:
        type: string
      error:
        type: string
      id:
        type: string
      isIndeterminate:
        type: boolean
      name:
        type: string
      payload:
        additionalProperties:
          type: string
        type: object
      percentage:
        type: integer
      status:
        type: string
      updateTime:
        type: string
      userId:
        type: string
    type: object
  service.TaskCreateOptions:
    properties:
      error:
        type: string
      isIndeterminate:
        type: boolean
      name:
        type: string
      payload:
        additionalProperties:
          type: string
        type: object
      percentage:
        type: integer
      status:
        type: string
      userId:
        type: string
    type: object
  service.TaskDismissAllResult:
    properties:
      failed:
        items:
          type: string
        type: array
      succeeded:
        items:
          type: string
        type: array
    type: object
  service.TaskList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Task'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.TaskPatchOptions:
    properties:
      error:
        type: string
      fields:
        items:
          type: string
        type: array
      isIndeterminate:
        type: boolean
      name:
        type: string
      payload:
        additionalProperties:
          type: string
        type: object
      percentage:
        type: integer
      status:
        type: string
      userId:
        type: string
    type: object
  service.TaskProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.User:
    properties:
      createTime:
        type: string
      email:
        type: string
      fullName:
        type: string
      id:
        type: string
      picture:
        $ref: '#/definitions/service.Picture'
      updateTime:
        type: string
      username:
        type: string
    type: object
  service.UserList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.User'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.UserPermission:
    properties:
      id:
        type: string
      permission:
        type: string
      user:
        $ref: '#/definitions/service.User'
    type: object
  service.UserProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.Workspace:
    properties:
      createTime:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      organization:
        $ref: '#/definitions/service.Organization'
      permission:
        type: string
      rootId:
        type: string
      storageCapacity:
        type: integer
      updateTime:
        type: string
    type: object
  service.WorkspaceCreateOptions:
    properties:
      image:
        type: string
      name:
        maxLength: 255
        type: string
      organizationId:
        type: string
      storageCapacity:
        type: integer
    required:
    - name
    - organizationId
    type: object
  service.WorkspaceList:
    properties:
      data:
        items:
          $ref: '#/definitions/service.Workspace'
        type: array
      page:
        type: integer
      size:
        type: integer
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
  service.WorkspaceProbe:
    properties:
      totalElements:
        type: integer
      totalPages:
        type: integer
    type: object
info:
  contact: {}
  title: Voltaserve API
  version: 3.0.0
paths:
  /files:
    delete:
      description: Delete Many
      operationId: files_delete_many
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.FileDeleteManyOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.FileDeleteManyResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete Many
      tags:
      - Files
    get:
      description: Read by FindPath
      operationId: files_find_by_path
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: FindPath
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read by FindPath
      tags:
      - Files
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create
      operationId: files_create
      parameters:
      - description: Type
        in: query
        name: type
        required: true
        type: string
      - description: Workspace ID
        in: query
        name: workspace_id
        required: true
        type: string
      - description: Parent ID
        in: query
        name: parent_id
        type: string
      - description: Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Files
  /files/{id}:
    delete:
      description: Delete One
      operationId: files_delete_one
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Target ID
        in: path
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete One
      tags:
      - Files
    get:
      description: Read
      operationId: files_find
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read
      tags:
      - Files
    patch:
      consumes:
      - application/x-www-form-urlencoded
      description: Patch
      operationId: files_patch
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch
      tags:
      - Files
  /files/{id}/copy/{targetId}:
    post:
      description: Copy One
      operationId: files_copy_one
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Target ID
        in: path
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Copy One
      tags:
      - Files
  /files/{id}/count:
    get:
      description: Count
      operationId: files_count
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Count
      tags:
      - Files
  /files/{id}/group_permissions:
    get:
      description: Read Group Permissions
      operationId: files_find_group_permissions
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.GroupPermission'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read Group Permissions
      tags:
      - Files
  /files/{id}/list:
    get:
      description: List
      operationId: files_list
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Type
        in: query
        name: type
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Query
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.FileList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Files
  /files/{id}/move/{targetId}:
    post:
      description: Move One
      operationId: files_move_one
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Target ID
        in: path
        name: targetId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Move One
      tags:
      - Files
  /files/{id}/name:
    patch:
      description: Patch Name
      operationId: files_patch_name
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.FilePatchNameOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch Name
      tags:
      - Files
  /files/{id}/original.{ext}:
    get:
      description: Download Original
      operationId: files_download_original
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      - description: Extension
        in: query
        name: ext
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download Original
      tags:
      - Files
  /files/{id}/patch_from_s3:
    patch:
      consumes:
      - application/x-www-form-urlencoded
      description: Patch from S3
      operationId: files_patch_from_s3
      parameters:
      - description: API Key
        in: query
        name: api_key
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      - description: S3 Key
        in: query
        name: s3_key
        required: true
        type: string
      - description: S3 Bucket
        in: query
        name: s3_bucket
        required: true
        type: string
      - description: Size
        in: query
        name: size
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch from S3
      tags:
      - Files
  /files/{id}/path:
    get:
      description: Find Path
      operationId: files_find_path
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.File'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Find Path
      tags:
      - Files
  /files/{id}/preview.{ext}:
    get:
      description: Download Preview
      operationId: files_download_preview
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Extension
        in: path
        name: ext
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download Preview
      tags:
      - Files
  /files/{id}/probe:
    get:
      description: Probe
      operationId: files_probe
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Type
        in: query
        name: type
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Query
        in: query
        name: query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.FileList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Files
  /files/{id}/reprocess:
    post:
      description: Reprocess
      operationId: files_reprocess
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.ReprocessResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Reprocess
      tags:
      - Files
  /files/{id}/revoke_group_permission:
    post:
      description: Revoke Group Permission
      operationId: files_revoke_group_permission
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.FileRevokeGroupPermissionOptions'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Revoke Group Permission
      tags:
      - Files
  /files/{id}/size:
    get:
      description: Read Compute Size
      operationId: files_compute_size
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read Compute Size
      tags:
      - Files
  /files/{id}/thumbnail.{ext}:
    get:
      description: Download Thumbnail
      operationId: files_download_thumbnail
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Extension
        in: path
        name: ext
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download Thumbnail
      tags:
      - Files
  /files/{id}/user_permissions:
    get:
      description: Read User Permissions
      operationId: files_find_user_permissions
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.UserPermission'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read User Permissions
      tags:
      - Files
  /files/copy:
    post:
      description: Copy Many
      operationId: files_copy_many
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.FileCopyManyOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.FileCopyManyResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Copy Many
      tags:
      - Files
  /files/create_from_s3:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Create from S3
      operationId: files_create_from_s3
      parameters:
      - description: API Key
        in: query
        name: api_key
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      - description: Workspace ID
        in: query
        name: workspace_id
        required: true
        type: string
      - description: Parent ID
        in: query
        name: parent_id
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: S3 Key
        in: query
        name: s3_key
        required: true
        type: string
      - description: S3 Bucket
        in: query
        name: s3_bucket
        required: true
        type: string
      - description: Size
        in: query
        name: size
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create from S3
      tags:
      - Files
  /files/grant_group_permission:
    post:
      description: Grant Group Permission
      operationId: files_grant_group_permission
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.FileGrantGroupPermissionOptions'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Grant Group Permission
      tags:
      - Files
  /files/grant_user_permission:
    post:
      description: Grant User Permission
      operationId: files_grant_user_permission
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.FileGrantUserPermissionOptions'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Grant User Permission
      tags:
      - Files
  /files/list:
    get:
      description: List by FindPath
      operationId: files_list_by_path
      parameters:
      - description: FindPath
        in: query
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.File'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List by FindPath
      tags:
      - Files
  /files/move:
    post:
      description: Move Many
      operationId: files_move_many
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.FileMoveManyOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.FileMoveManyResult'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Move Many
      tags:
      - Files
  /files/revoke_user_permission:
    post:
      description: Revoke User Permission
      operationId: files_revoke_user_permission
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.FileRevokeUserPermissionOptions'
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Revoke User Permission
      tags:
      - Files
  /groups:
    get:
      description: List
      operationId: groups_list
      parameters:
      - description: Query
        in: query
        name: query
        type: string
      - description: Organization ID
        in: query
        name: organization_id
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GroupList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Groups
    post:
      consumes:
      - application/json
      description: Create
      operationId: groups_create
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.GroupCreateOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Groups
  /groups/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: groups_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Groups
    get:
      description: Read
      operationId: groups_find
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Group'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read
      tags:
      - Groups
  /groups/{id}/members:
    delete:
      consumes:
      - application/json
      description: Remove Member
      operationId: groups_remove_member
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.GroupRemoveMemberOptions'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Remove Member
      tags:
      - Groups
    post:
      consumes:
      - application/json
      description: Add Member
      operationId: groups_add_member
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Add Member
      tags:
      - Groups
  /groups/{id}/name:
    patch:
      consumes:
      - application/json
      description: Patch Name
      operationId: groups_patch_name
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.GroupPatchNameOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Group'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch Name
      tags:
      - Groups
  /groups/probe:
    get:
      description: Probe
      operationId: groups_probe
      parameters:
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.GroupProbe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Groups
  /health:
    get:
      description: Check
      operationId: health_check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Check
      tags:
      - Health
  /insights/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: insights_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Insights
    patch:
      consumes:
      - application/json
      description: Patch
      operationId: insights_patch
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch
      tags:
      - Insights
    post:
      consumes:
      - application/json
      description: Create
      operationId: insights_create
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.InsightsCreateOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Insights
  /insights/{id}/entities:
    get:
      description: List Entities
      operationId: insights_list_entities
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Query
        in: query
        name: query
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.InsightsEntityList'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List Entities
      tags:
      - Insights
  /insights/{id}/entities/probe:
    get:
      description: Probe Entities
      operationId: insights_probe_entities
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.InsightsEntityProbe'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe Entities
      tags:
      - Insights
  /insights/{id}/info:
    get:
      consumes:
      - application/json
      description: Read Info
      operationId: insights_read_info
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.InsightsInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read Info
      tags:
      - Insights
  /insights/{id}/ocr{ext}:
    get:
      description: Download OCR
      operationId: insights_download_ocr
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      - description: Extension
        in: query
        name: ext
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download OCR
      tags:
      - Insights
  /insights/{id}/text{ext}:
    get:
      description: Download Text
      operationId: insights_download_text
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      - description: Extension
        in: query
        name: ext
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download Text
      tags:
      - Insights
  /insights/languages:
    get:
      description: Read Languages
      operationId: insights_find_languages
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.InsightsLanguage'
            type: array
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read Languages
      tags:
      - Insights
  /invitations:
    post:
      consumes:
      - application/json
      description: Create
      operationId: invitations_create
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.InvitationCreateOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/service.Invitation'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Invitations
  /invitations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: invitations_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Invitations
  /invitations/{id}/accept:
    post:
      consumes:
      - application/json
      description: Accept
      operationId: invitations_accept
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Accept
      tags:
      - Invitations
  /invitations/{id}/decline:
    post:
      consumes:
      - application/json
      description: Decline
      operationId: invitations_decline
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Decline
      tags:
      - Invitations
  /invitations/{id}/resend:
    post:
      consumes:
      - application/json
      description: Resend
      operationId: invitations_resend
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Resend
      tags:
      - Invitations
  /invitations/incoming:
    get:
      description: List Incoming
      operationId: invitation_list_incoming
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.InvitationList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List Incoming
      tags:
      - Invitations
  /invitations/incoming/count:
    get:
      description: Count Incoming
      operationId: invitation_count_incoming
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Count Incoming
      tags:
      - Invitations
  /invitations/incoming/probe:
    get:
      description: Probe Incoming
      operationId: invitation_probe_incoming
      parameters:
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.InvitationProbe'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe Incoming
      tags:
      - Invitations
  /invitations/outgoing:
    get:
      description: List Outgoing
      operationId: invitation_list_outgoing
      parameters:
      - description: Organization ID
        in: query
        name: organization_id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.InvitationList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List Outgoing
      tags:
      - Invitations
  /invitations/outgoing/probe:
    get:
      description: Probe Outgoing
      operationId: invitation_probe_outgoing
      parameters:
      - description: Organization ID
        in: query
        name: organization_id
        required: true
        type: string
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.InvitationList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe Outgoing
      tags:
      - Invitations
  /mosaics/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: mosaic_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Mosaic
    post:
      consumes:
      - application/json
      description: Create
      operationId: mosaic_create
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Mosaic
  /mosaics/{id}/info:
    get:
      consumes:
      - application/json
      description: Read Info
      operationId: mosaic_read_info
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.MosaicInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read Info
      tags:
      - Mosaic
  /mosaics/{id}/zoom_level/{zoom_level}/row/{row}/column/{column}/extension/{extension}:
    get:
      description: Download Tile
      operationId: mosaic_download_tile
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Zoom Level
        in: path
        name: zoom_level
        required: true
        type: string
      - description: Row
        in: path
        name: row
        required: true
        type: string
      - description: Column
        in: path
        name: column
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download Tile
      tags:
      - Mosaic
  /organizations:
    get:
      description: List
      operationId: organizations_list
      parameters:
      - description: Query
        in: query
        name: query
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.OrganizationList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Organizations
    post:
      consumes:
      - application/json
      description: Create
      operationId: organizations_create
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.OrganizationCreateOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Organizations
  /organizations/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: organizations_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Organizations
    get:
      description: Read
      operationId: organizations_find
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Organization'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read
      tags:
      - Organizations
  /organizations/{id}/leave:
    post:
      consumes:
      - application/json
      description: Leave
      operationId: organizations_leave
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Leave
      tags:
      - Organizations
  /organizations/{id}/members:
    delete:
      consumes:
      - application/json
      description: Remove Member
      operationId: organizations_remove_member
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.OrganizationRemoveMemberOptions'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Remove Member
      tags:
      - Organizations
  /organizations/{id}/name:
    patch:
      consumes:
      - application/json
      description: Patch Name
      operationId: organizations_patch_name
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.OrganizationPatchNameOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch Name
      tags:
      - Organizations
  /organizations/probe:
    get:
      description: Probe
      operationId: organizations_probe
      parameters:
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.OrganizationProbe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Organizations
  /snapshots:
    get:
      description: List
      operationId: snapshots_list
      parameters:
      - description: File ID
        in: query
        name: file_id
        required: true
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.SnapshotList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Snapshots
  /snapshots/{id}:
    patch:
      description: Patch
      operationId: snapshots_patch
      parameters:
      - description: API Key
        in: query
        name: api_key
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.SnapshotPatchOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Snapshot'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch
      tags:
      - Snapshots
  /snapshots/{id}/activate:
    post:
      description: Activate
      operationId: snapshots_activate
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Activate
      tags:
      - Snapshots
  /snapshots/{id}/detach:
    post:
      description: Detach
      operationId: snapshots_detach
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Detach
      tags:
      - Snapshots
  /snapshots/probe:
    get:
      description: Probe
      operationId: snapshots_probe
      parameters:
      - description: File ID
        in: query
        name: file_id
        required: true
        type: string
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.SnapshotProbe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Snapshots
  /storage/account_usage:
    get:
      description: Compute Account Usage
      operationId: storage_compute_account_usage
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.StorageUsage'
        "500":
          description: Internal Server Error
      summary: Compute Account Usage
      tags:
      - Storage
  /storage/file_usage:
    get:
      description: Compute File Usage
      operationId: storage_compute_file_usage
      parameters:
      - description: File ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.StorageUsage'
        "500":
          description: Internal Server Error
      summary: Compute File Usage
      tags:
      - Storage
  /storage/workspace_usage:
    get:
      description: Compute Workspace Usage
      operationId: storage_compute_workspace_usage
      parameters:
      - description: Workspace ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.StorageUsage'
        "500":
          description: Internal Server Error
      summary: Compute Workspace Usage
      tags:
      - Storage
  /tasks:
    get:
      description: List
      operationId: tasks_list
      parameters:
      - description: Query
        in: query
        name: query
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.TaskList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Tasks
    post:
      description: Create
      operationId: tasks_create
      parameters:
      - description: API Key
        in: query
        name: api_key
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.TaskCreateOptions'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: tasks_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Tasks
    get:
      description: Read
      operationId: tasks_get
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read
      tags:
      - Tasks
    patch:
      description: Patch
      operationId: tasks_patch
      parameters:
      - description: API Key
        in: query
        name: api_key
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.TaskPatchOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Task'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch
      tags:
      - Tasks
  /tasks/{id}/dismiss:
    post:
      consumes:
      - application/json
      description: Dismiss
      operationId: tasks_dismiss
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Dismiss
      tags:
      - Tasks
  /tasks/count:
    get:
      description: Count
      operationId: tasks_count
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Count
      tags:
      - Tasks
  /tasks/dismiss:
    post:
      consumes:
      - application/json
      description: Dismiss All
      operationId: tasks_dismiss_all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.TaskDismissAllResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Dismiss All
      tags:
      - Tasks
  /tasks/probe:
    get:
      description: Probe
      operationId: tasks_probe
      parameters:
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.TaskProbe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Tasks
  /users:
    get:
      description: List
      operationId: users_list
      parameters:
      - description: Query
        in: query
        name: query
        type: string
      - description: Organization ID
        in: query
        name: organization_id
        type: string
      - description: Group ID
        in: query
        name: group
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Exclude Group Members
        in: query
        name: exclude_group_members
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.UserList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Users
  /users/{id}/picture{ext}:
    get:
      description: Download Picture
      operationId: users_download_picture
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Extension
        in: path
        name: ext
        required: true
        type: string
      - description: Access Token
        in: query
        name: access_token
        required: true
        type: string
      - description: Organization ID
        in: query
        name: organization_id
        type: string
      - description: Group ID
        in: query
        name: group
        type: string
      produces:
      - application/json
      responses:
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Download Picture
      tags:
      - Users
  /users/probe:
    get:
      description: Probe
      operationId: users_probe
      parameters:
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.UserProbe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Users
  /version:
    get:
      description: Read
      operationId: version_read
      produces:
      - application/json
      responses:
        "200":
          description: '{Version}'
          schema:
            type: string
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read
      tags:
      - Version
  /workspaces:
    get:
      description: List
      operationId: workspaces_list
      parameters:
      - description: Query
        in: query
        name: query
        type: string
      - description: Page
        in: query
        name: page
        type: string
      - description: Size
        in: query
        name: size
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.WorkspaceList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: List
      tags:
      - Workspaces
    post:
      consumes:
      - application/json
      description: Create
      operationId: workspaces_create
      parameters:
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/service.WorkspaceCreateOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Workspace'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Create
      tags:
      - Workspaces
  /workspaces/{id}:
    delete:
      consumes:
      - application/json
      description: Delete
      operationId: workspaces_delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Delete
      tags:
      - Workspaces
    get:
      description: Read
      operationId: workspaces_find
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Workspace'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Read
      tags:
      - Workspaces
  /workspaces/{id}/storage_capacity:
    patch:
      consumes:
      - application/json
      description: Patch Storage Capacity
      operationId: workspaces_patch_storage_capacity
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.WorkspacePatchStorageCapacityOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Workspace'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch Storage Capacity
      tags:
      - Workspaces
  /workspaces/{id}/update_name:
    patch:
      consumes:
      - application/json
      description: Patch Name
      operationId: workspaces_patch_name
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/router.WorkspacePatchNameOptions'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.Workspace'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Patch Name
      tags:
      - Workspaces
  /workspaces/probe:
    get:
      description: Probe
      operationId: workspaces_probe
      parameters:
      - description: Size
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/service.WorkspaceProbe'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorpkg.ErrorResponse'
      summary: Probe
      tags:
      - Workspaces
swagger: "2.0"
