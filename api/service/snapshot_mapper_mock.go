// Code generated by MockGen. DO NOT EDIT.
// Source: service/snapshot_mapper.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	model "github.com/kouprlabs/voltaserve/api/model"
)

// MockSnapshotMapper is a mock of SnapshotMapper interface.
type MockSnapshotMapper struct {
	ctrl     *gomock.Controller
	recorder *MockSnapshotMapperMockRecorder
}

// MockSnapshotMapperMockRecorder is the mock recorder for MockSnapshotMapper.
type MockSnapshotMapperMockRecorder struct {
	mock *MockSnapshotMapper
}

// NewMockSnapshotMapper creates a new mock instance.
func NewMockSnapshotMapper(ctrl *gomock.Controller) *MockSnapshotMapper {
	mock := &MockSnapshotMapper{ctrl: ctrl}
	mock.recorder = &MockSnapshotMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSnapshotMapper) EXPECT() *MockSnapshotMapperMockRecorder {
	return m.recorder
}

// mapMany mocks base method.
func (m *MockSnapshotMapper) mapMany(arg0 []model.Snapshot, arg1 string) []*Snapshot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapMany", arg0, arg1)
	ret0, _ := ret[0].([]*Snapshot)
	return ret0
}

// mapMany indicates an expected call of mapMany.
func (mr *MockSnapshotMapperMockRecorder) mapMany(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapMany", reflect.TypeOf((*MockSnapshotMapper)(nil).mapMany), arg0, arg1)
}

// mapOne mocks base method.
func (m *MockSnapshotMapper) mapOne(arg0 model.Snapshot) *Snapshot {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapOne", arg0)
	ret0, _ := ret[0].(*Snapshot)
	return ret0
}

// mapOne indicates an expected call of mapOne.
func (mr *MockSnapshotMapperMockRecorder) mapOne(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapOne", reflect.TypeOf((*MockSnapshotMapper)(nil).mapOne), arg0)
}
