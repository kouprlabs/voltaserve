// Code generated by MockGen. DO NOT EDIT.
// Source: service/user_mapper.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	model "github.com/kouprlabs/voltaserve/api/model"
)

// MockUserMapper is a mock of UserMapper interface.
type MockUserMapper struct {
	ctrl     *gomock.Controller
	recorder *MockUserMapperMockRecorder
}

// MockUserMapperMockRecorder is the mock recorder for MockUserMapper.
type MockUserMapperMockRecorder struct {
	mock *MockUserMapper
}

// NewMockUserMapper creates a new mock instance.
func NewMockUserMapper(ctrl *gomock.Controller) *MockUserMapper {
	mock := &MockUserMapper{ctrl: ctrl}
	mock.recorder = &MockUserMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserMapper) EXPECT() *MockUserMapperMockRecorder {
	return m.recorder
}

// mapMany mocks base method.
func (m *MockUserMapper) mapMany(users []model.User) ([]*User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapMany", users)
	ret0, _ := ret[0].([]*User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapMany indicates an expected call of mapMany.
func (mr *MockUserMapperMockRecorder) mapMany(users interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapMany", reflect.TypeOf((*MockUserMapper)(nil).mapMany), users)
}

// mapOne mocks base method.
func (m *MockUserMapper) mapOne(user model.User) *User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapOne", user)
	ret0, _ := ret[0].(*User)
	return ret0
}

// mapOne indicates an expected call of mapOne.
func (mr *MockUserMapperMockRecorder) mapOne(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapOne", reflect.TypeOf((*MockUserMapper)(nil).mapOne), user)
}
