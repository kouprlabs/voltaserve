// Code generated by MockGen. DO NOT EDIT.
// Source: service/group_mapper.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	model "github.com/kouprlabs/voltaserve/api/model"
)

// MockGroupMapper is a mock of GroupMapper interface.
type MockGroupMapper struct {
	ctrl     *gomock.Controller
	recorder *MockGroupMapperMockRecorder
}

// MockGroupMapperMockRecorder is the mock recorder for MockGroupMapper.
type MockGroupMapperMockRecorder struct {
	mock *MockGroupMapper
}

// NewMockGroupMapper creates a new mock instance.
func NewMockGroupMapper(ctrl *gomock.Controller) *MockGroupMapper {
	mock := &MockGroupMapper{ctrl: ctrl}
	mock.recorder = &MockGroupMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupMapper) EXPECT() *MockGroupMapperMockRecorder {
	return m.recorder
}

// mapMany mocks base method.
func (m *MockGroupMapper) mapMany(arg0 []model.Group, arg1 string) ([]*Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapMany", arg0, arg1)
	ret0, _ := ret[0].([]*Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapMany indicates an expected call of mapMany.
func (mr *MockGroupMapperMockRecorder) mapMany(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapMany", reflect.TypeOf((*MockGroupMapper)(nil).mapMany), arg0, arg1)
}

// mapOne mocks base method.
func (m *MockGroupMapper) mapOne(arg0 model.Group, arg1 string) (*Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapOne", arg0, arg1)
	ret0, _ := ret[0].(*Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapOne indicates an expected call of mapOne.
func (mr *MockGroupMapperMockRecorder) mapOne(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapOne", reflect.TypeOf((*MockGroupMapper)(nil).mapOne), arg0, arg1)
}
