// Code generated by MockGen. DO NOT EDIT.
// Source: service/storage_mapper.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorageMapper is a mock of StorageMapper interface.
type MockStorageMapper struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMapperMockRecorder
}

// MockStorageMapperMockRecorder is the mock recorder for MockStorageMapper.
type MockStorageMapperMockRecorder struct {
	mock *MockStorageMapper
}

// NewMockStorageMapper creates a new mock instance.
func NewMockStorageMapper(ctrl *gomock.Controller) *MockStorageMapper {
	mock := &MockStorageMapper{ctrl: ctrl}
	mock.recorder = &MockStorageMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorageMapper) EXPECT() *MockStorageMapperMockRecorder {
	return m.recorder
}

// mapStorageUsage mocks base method.
func (m *MockStorageMapper) mapStorageUsage(byteCount, maxBytes int64) *StorageUsage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapStorageUsage", byteCount, maxBytes)
	ret0, _ := ret[0].(*StorageUsage)
	return ret0
}

// mapStorageUsage indicates an expected call of mapStorageUsage.
func (mr *MockStorageMapperMockRecorder) mapStorageUsage(byteCount, maxBytes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapStorageUsage", reflect.TypeOf((*MockStorageMapper)(nil).mapStorageUsage), byteCount, maxBytes)
}
