// Code generated by MockGen. DO NOT EDIT.
// Source: service/file_mapper.go

// Package mocks is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/kouprlabs/voltaserve/api/model"
)

// MockFileMapper is a mock of FileMapper interface.
type MockFileMapper struct {
	ctrl     *gomock.Controller
	recorder *MockFileMapperMockRecorder
}

// MockFileMapperMockRecorder is the mock recorder for MockFileMapper.
type MockFileMapperMockRecorder struct {
	mock *MockFileMapper
}

// NewMockFileMapper creates a new mock instance.
func NewMockFileMapper(ctrl *gomock.Controller) *MockFileMapper {
	mock := &MockFileMapper{ctrl: ctrl}
	mock.recorder = &MockFileMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileMapper) EXPECT() *MockFileMapperMockRecorder {
	return m.recorder
}

// MapMany mocks base method.
func (m *MockFileMapper) MapMany(arg0 []model.File, arg1 string) ([]*File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MapMany", arg0, arg1)
	ret0, _ := ret[0].([]*File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MapMany indicates an expected call of MapMany.
func (mr *MockFileMapperMockRecorder) MapMany(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MapMany", reflect.TypeOf((*MockFileMapper)(nil).MapMany), arg0, arg1)
}

// MapOne mocks base method.
func (m *MockFileMapper) MapOne(arg0 model.File, arg1 string) (*File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MapOne", arg0, arg1)
	ret0, _ := ret[0].(*File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MapOne indicates an expected call of MapOne.
func (mr *MockFileMapperMockRecorder) MapOne(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MapOne", reflect.TypeOf((*MockFileMapper)(nil).MapOne), arg0, arg1)
}
