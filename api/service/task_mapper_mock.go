// Code generated by MockGen. DO NOT EDIT.
// Source: service/task_mapper.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	model "github.com/kouprlabs/voltaserve/api/model"
)

// MockTaskMapper is a mock of TaskMapper interface.
type MockTaskMapper struct {
	ctrl     *gomock.Controller
	recorder *MockTaskMapperMockRecorder
}

// MockTaskMapperMockRecorder is the mock recorder for MockTaskMapper.
type MockTaskMapperMockRecorder struct {
	mock *MockTaskMapper
}

// NewMockTaskMapper creates a new mock instance.
func NewMockTaskMapper(ctrl *gomock.Controller) *MockTaskMapper {
	mock := &MockTaskMapper{ctrl: ctrl}
	mock.recorder = &MockTaskMapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskMapper) EXPECT() *MockTaskMapperMockRecorder {
	return m.recorder
}

// mapMany mocks base method.
func (m *MockTaskMapper) mapMany(arg0 []model.Task) ([]*Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapMany", arg0)
	ret0, _ := ret[0].([]*Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapMany indicates an expected call of mapMany.
func (mr *MockTaskMapperMockRecorder) mapMany(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapMany", reflect.TypeOf((*MockTaskMapper)(nil).mapMany), arg0)
}

// mapOne mocks base method.
func (m *MockTaskMapper) mapOne(arg0 model.Task) (*Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "mapOne", arg0)
	ret0, _ := ret[0].(*Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// mapOne indicates an expected call of mapOne.
func (mr *MockTaskMapperMockRecorder) mapOne(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mapOne", reflect.TypeOf((*MockTaskMapper)(nil).mapOne), arg0)
}
